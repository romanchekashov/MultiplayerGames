local MainState = require "src.main_state"
local assets = require "src.utils.assets"
local MSG = require "src.utils.messages"
local defold_utils = require "src.utils.defold-utils"

function init(self)
	-- use the x and y component to track which screen is currently displayed.
	self.screen_pos = vmath.vector3(0, 0, 0)
	self.next_screen = nil
	self.current_screen = nil
	self.loading = false
	self.map_level = MainState.MAP_LEVELS.HOUSE
	msg.post("#", "load_level", {map_level = MainState.MAP_LEVELS.HOUSE})
end

function final(self)
	print("final")
	if self.current_screen ~= nil then
		-- if there was a current screen, delete it
		go.delete(self.current_screen)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("load_level") and self.map_level ~= message.level then
		if self.current_screen ~= nil then
			-- if there was a current screen, delete it
			go.delete(self.current_screen)
		end

		if message.map_level == MainState.MAP_LEVELS.BASEMENT then
			if MainState.players:has(MainState.player.uid) then
				MainState.players:get(MainState.player.uid).map_level = MainState.MAP_LEVELS.BASEMENT
			end

			self.current_screen = collectionfactory.create("#collectionfactory-basement", self.screen_pos)
			--defold_utils.SET_CURRENT_COLLECTION_IDS("default", self.current_screen)
			msg.post("@render:", "clear_color", {color = assets.COLORS.RED})

			msg.post("/gate-main", "disable")
			print("BASEMENT", #self.current_screen)
		elseif message.map_level == MainState.MAP_LEVELS.HOUSE then
			if MainState.players:has(MainState.player.uid) then
				MainState.players:get(MainState.player.uid).map_level = MainState.MAP_LEVELS.HOUSE
			end

			self.current_screen = collectionfactory.create("#collectionfactory-house", self.screen_pos)
			--defold_utils.SET_CURRENT_COLLECTION_IDS("default", self.current_screen)
			msg.post("@render:", "clear_color", {color = assets.COLORS.GREEN})

			if MainState:fixedFuzeBoxCount() == MainState.FIXED_FUZE_BOX_COUNT_MAX then
				msg.post("/gate-main", "disable")
			else
				msg.post("/gate-main", "enable")
			end
			print("HOUSE", #self.current_screen)
		end

		self.map_level = message.map_level
		msg.post("/factory#fuze", MSG.LEVEL_CHANGE.map_level_change.name, {map_level = self.map_level})
		msg.post("/factory#fuze-box", MSG.LEVEL_CHANGE.map_level_change.name, {map_level = self.map_level})
	elseif message_id == hash("gate_open") then
		if self.map_level == MainState.MAP_LEVELS.HOUSE and MainState:fixedFuzeBoxCount() == MainState.FIXED_FUZE_BOX_COUNT_MAX then
			msg.post("/gate-main", "disable")
		end
	end
end
