local MainState = require "src.main_state"
local Utils = require "src.utils.utils"
local debugUtils = require "src.utils.debug-utils"

local log = debugUtils.createLog("[spawner_player]").log

local random_position = Utils.random_position

-- local function random_position()
-- 	return vmath.vector3(9000, 4000, 0) -- vmath.vector3(x,y,z)
-- end

function init(self)
	log("spawner_player init", msg.url())
	self.isServer = MainState.isServer
    self.w = tonumber(sys.get_config("display.width")) - 300
    self.h = tonumber(sys.get_config("display.height")) - 200
	-- print("w " .. self.w .. " h " .. self.h)
	self.players = MainState.players
end

function on_message(self, message_id, message, sender)
	if message_id == hash("add_player") then
		-- start position outside screen edge
		--local pos = vmath.vector3(400, 400, 0)
		local pos = message.pos
		--local pos = random_position()
		local player_id = factory.create("#factory-player", pos, nil, {
			remote = message.remote,
			uid = message.uid,
			map_level = MainState.MAP_LEVELS.HOUSE,
			player_type = message.player_type})
	elseif message_id == hash("remove_player") then
		if self.players:has(message.uid) then
			local player = self.players:get(message.uid)
			--log("Bullet killed player", player.username)
			go.delete(player.go_id)

			if self.isServer then
				local player = self.players:get(message.uid)
				timer.delay(5, false, function()
					factory.create("#factory-player", Utils.random_position(), nil, {
						remote = false,
						uid = player.uid,
						map_level = MainState.MAP_LEVELS.HOUSE,
						player_type = player.type})
				end)
			end
		end
		-- for m, _ in pairs(self.players) do
        --     go.delete(m)
        -- end
        -- self.players = {}
	end
end
