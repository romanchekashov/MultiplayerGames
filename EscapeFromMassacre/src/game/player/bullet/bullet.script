local MainState = require "src.main_state"

go.property("remote", true)
go.property("uid", 0)
go.property("player_uid", 0)
go.property("map_level", 0)

local MSG_GROUPS = MainState.MSG_GROUPS

function init(self)
	local id = go.get_id()
	self.isServer = MainState.isServer

	if self.isServer then
		local obj = MainState.register_gameobject(self.player_uid, id, MainState.FACTORY_TYPES.bullet)
		MainState.bulletUidBelongToMapLevel[obj.gouid] = MainState.players:get(self.player_uid).map_level
		MainState.bulletIdToUid[id] = obj.gouid
	else
		msg.post("/broadsock", "register_gameobject", { id = id, type = MainState.FACTORY_TYPES.bullet })
		MainState.bulletUidBelongToMapLevel[self.uid] = self.map_level
		MainState.bulletIdToUid[id] = self.uid
		MainState.SOUND.pistol_9mm_shoot_1()
	end

	MainState.bulletBelongToPlayerUid[id] = self.player_uid
	-- print("bullet from", self.uid)
end

function final(self)
	local id = go.get_id()

	if self.isServer then
		MainState.unregister_gameobject({ id = id })
	else
		msg.post("/broadsock", "unregister_gameobject", { id = go.get_id() })
	end

	MainState.bulletBelongToPlayerUid[id] = nil
	MainState.bulletIdToUid[id] = nil
end

function update(self, dt)
	if self.remote then
		return
	end
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == MSG_GROUPS.COLLISION_RESPONSE then
		if message.group == MSG_GROUPS.BOX then
			print("I collided with", go.get_id(), message.other_id, message.other_group)
			-- go.delete(message.other_id)
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
