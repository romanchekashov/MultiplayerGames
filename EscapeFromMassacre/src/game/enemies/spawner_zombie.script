local MainState = require "src.main_state"
local Utils = require "src.utils.utils"

local random_position = Utils.random_position

local function spawn_zombie(speed, map_level)
	return factory.create("#factory-zombie", random_position(), nil, {remote = false, speed = speed, map_level = map_level})
end

function init(self)
	self.isServer = MainState.isServer
	self.isOffline = MainState.selectedRoom ~= nil and MainState.selectedRoom.name == MainState.OFFLINE_ROOM.name
	self.last_zombie_speed = 50
	self.last_zombie_map_level = MainState.MAP_LEVELS.BASEMENT
end

function on_message(self, message_id, message, sender)
	if not (self.isServer or self.isOffline) then
		return
	end

	if message_id == hash("add_zombie") then
		for i = 1, message.size do
			local go_id = spawn_zombie(self.last_zombie_speed, self.last_zombie_map_level)
		end

		self.last_zombie_speed = self.last_zombie_speed + 20

		if self.last_zombie_map_level == MainState.MAP_LEVELS.HOUSE then
			self.last_zombie_map_level = MainState.MAP_LEVELS.BASEMENT
		else
			self.last_zombie_map_level = MainState.MAP_LEVELS.HOUSE
		end
	elseif message_id == hash("remove_zombie") then
		local zombie_uid = MainState.zombieIdToUid[message.zombie_id]
		local zombie = MainState.zombies:get(zombie_uid)

		if zombie ~= nil then
			go.delete(zombie.id)
			-- msg.post("/gui#menu", "set_online_players", {online_players = self.zombies.length})
		end
	end
end

function on_input(self, action_id, action)

end

function on_reload(self)
    -- Add reload-handling code here
    -- Remove this function if not needed
end
